# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
read-workspace: &read-workspace
  attach_workspace:
    at: ~/repo

defaults: &defaults
  docker:
    - image: circleci/node:10.15.0
  working_directory: ~/repo

set-git-setting: &set-git-settings
  run:
    command: |
      git config --global user.email $USER_EMAIL
      git config --global user.name "${CIRCLE_USERNAME}"

set-fingerprint: &set-fingerprint
  add_ssh_keys:
    fingerprints:
      - $SSH_KEY_FINGERPRINT

version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./**

  test-unit:
    <<: *defaults
    steps:
      - *read-workspace
      - run: yarn test:unit

  test-lint:
    <<: *defaults
    steps:
      - *read-workspace
      - run: yarn lint

  version:
    <<: *defaults
    steps:
      - *read-workspace
      - *set-fingerprint
      - *set-git-settings
      - run: yarn lerna:version
      - store_test_results:
          path: test-reports
      - codecov/upload:
          file: coverage/lcov.info

  deploy:
    <<: *defaults
    steps:
      - *read-workspace
      - run: yarn ow:config
      - run: yarn deploy

  publish:
    <<: *defaults
    steps:
      - *read-workspace
      - *set-fingerprint
      - *set-git-settings
      - run: yarn lerna:publish

workflows:
  version: 2
  build:
    jobs:
      - build
      - test-unit:
          requires:
          - build
      - test-lint:
          requires:
          - build
      - version:
          requires:
            - build
            - test-unit
            - test-lint
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - version
          filters:
            branches:
              only: master
      - publish:
          requires:
            - deploy
          filters:
            branches:
              only: master
