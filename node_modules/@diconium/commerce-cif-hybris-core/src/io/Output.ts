/*
 * Copyright 2019 diconium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { BaseCcifError } from '@adobe/commerce-cif-common';

export class Output<T> {
  response: ResponseFormat = new ResponseFormat();
  accessToken: string;

  constructor({ accessToken, body, error, statusCode = 200, headers, errorType }: OutputBuilder) {
    this.accessToken = accessToken;
    this.response.statusCode = statusCode;
    const setCookieHeader = accessToken ? { 'Set-Cookie': `ccs-access_token=${accessToken}; path=/;` } : {};
    this.response.headers = Object.assign(headers ? headers : {}, setCookieHeader);
    if (error) {
      this.response.error = error;
      this.response.errorType = errorType;
    }else {
      this.response.body = body;
    }
  }

}

interface OutputBuilder {
  accessToken?: string;
  body?: any;
  error?: BaseCcifError;
  statusCode?: number;
  headers?: object;
  errorType?: string;
}

class ResponseFormat{
  body: any;
  error: BaseCcifError;
  errorType: string;
  statusCode: number;
  headers: object;
}
