/*
 * Copyright 2019 diconium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { DTO } from '../DTO';
import { InputSettings } from '../io';
import { TranslationService } from './TranslationService';

export abstract class Mapper<E> {

  protected settings: InputSettings;
  protected translationService: TranslationService;
  protected actionParameters: any;

  protected constructor(settings: InputSettings, translatorService?: TranslationService, actionParameters?:any) {
    this.settings = settings;
    if (translatorService) {
      this.translationService = translatorService.setLocale(this.settings.language);
    }
    this.actionParameters = actionParameters;
  }

  abstract mapFromInputArgsToActionParameters(mappable: any): any;
  abstract mapToEntity(dto: DTO, entity?: E): E;
  abstract mapFromEntity(entity: E, mappable?: DTO): DTO;
}
