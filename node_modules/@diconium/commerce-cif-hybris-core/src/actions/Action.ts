/*
 * Copyright 2019 diconium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Input, InputSettings } from '../io';
import { Client } from '../Client';
import { Mapper } from '../mappers';

export abstract class Action<E> {
  input: Input;
  client: Client;
  mapper: Mapper<E>;
  errorType: string;

  protected constructor(input: Input) {
    this.input = input;
  }

  protected abstract doActivation(): Promise<any>;

  protected validateParameters() {
    return this.client;
  }

  activate() : Promise<any> {

    if (!this.validateParameters()) {
      throw new Error('Missing Action Parameters');
    }
    return this.doActivation();
  }

  setClient(client: new (input : Input) => Client) : Action<E> {
    this.client = new client(this.input);
    return this;
  }

  setErrorType(errorType: string) {
    this.errorType = errorType;
    return this;
  }

  setMapper(mapper: new (settings: InputSettings, actionParameters: any) => Mapper<E>) : Action<E> {
    this.mapper = new mapper(this.input.settings, this.input.parameters);
    return this;
  }
}
