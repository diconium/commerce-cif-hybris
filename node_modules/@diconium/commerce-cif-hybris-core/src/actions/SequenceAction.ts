/*
 * Copyright 2019 diconium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Action } from './Action';
import { Input } from '../io';

export class SequenceAction extends Action<any> {

  constructor(input: Input) {
    super(input);
  }

  doActivation(): Promise<Input> {

    const {
      errorOutput,
      settings,
      parameters,
    } = this.input;

    if (errorOutput) {
      return Promise.resolve(new Input({ settings, parameters, error: errorOutput }));
    }

    return this.client
      .exec()
      .then((response) => {
        return new Input({
          settings,
          error: undefined,
          parameters: this.client.input.parameters,
          responseExtension: this.getBodyExtension(response),
        });
      })
      .catch((error) => {
        return new Input({ settings, error, parameters });
      });
  }

  private getBodyExtension(response) {
    return this.mapper && response ? this.mapper.mapToEntity(response) : {};
  }
}
